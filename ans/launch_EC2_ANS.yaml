---
- name: deploy a cloudformation stack
  hosts: "{{ server }}"
  become: true
  vars:
    server: "{{ server }}"
    stack_name: "{{ stack_name }}"
    region: "{{ region }}"
    template: "{{ template }}"
    UserID: "{{ UserID }}"
    InstanceName: "{{ InstanceName }}"
    InstanceType: "{{ InstanceType }}"
    SecurityGroupIds: "{{ SecurityGroupIds }}"
    ImageID: "{{ ImageID }}"
    SubnetID: "{{ SubnetID }}"
  tasks:
  - name: create cloudformation stack {{ stack_name }}
    amazon.aws.cloudformation:
      stack_name: "{{ stack_name }}"
      state: present
      region: "{{ region }}"
      disable_rollback: true
      template: "{{ template }}"
      template_parameters:
        UserID: "{{ UserID }}"
        InstanceName: "{{ InstanceName }}"
        InstanceType: "{{ InstanceType }}"
        SecurityGroupIds: "{{ SecurityGroupIds }}"
        ImageID: "{{ ImageID }}"
        SubnetID: "{{ SubnetID }}"
      tags:
        StackName: "{{ stack_name }}"
  - name: Wait for SSH connection
    wait_for_connection:
      delay: 5
      timeout: 300
  - name: Get CloudFormation Stack Outputs
    amazon.aws.cloudformation_info:
      stack_name: "{{ stack_name }}"
    register: cf
  - name: Print Stack Outputs
    debug: 
      var: cf.cloudformation['{{ stack_name }}'].stack_outputs
  - name: save output to work directory
    ansible.builtin.copy:
      content: cf.cloudformation['{{ stack_name }}'].stack_outputs
      dest: "{{ workdir }}"
    delegate_to: "{{ server }}"
